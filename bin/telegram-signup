#!/usr/bin/env node

const TelegramSignUp = require('../lib');
const minimist = require('minimist');
const readline = require('readline');

const argv = minimist(process.argv.slice(2), {
  boolean: ['h', 'help', 'd', 'dev']
});

if (argv.h || argv.help) {
  console.log([
    'Usage: telegram-signup [options]',
    '',
    'Options:',
    '  -I, --id      API ID [197316]',
    '  -H, --hash    API hash [f5a841647e17ae9da32b9483d4304e45]',
    '  -d, --dev     Use telegram dev server',
    '  -h, --help    Print this list and exit'
  ].join(require('os').EOL));
  process.exit();
}

const id = argv.I || argv.id;
const hash = argv.H || argv.hash;
const dev = !!(argv.d || argv.dev);

const telegram = new TelegramSignUp(id, hash, dev);

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

const input = text => new Promise(resolve => rl.question(text, resolve));

start()
  .then(
    () => {
      process.exit();
    },
    err => {
      console.error(err.toString());
      process.exit(1);
    }
  );

async function start () {
  let phoneNumber;

  while (!phoneNumber) {
    phoneNumber = await input('Phone number: ');
  }

  let firstName;

  while (!firstName) {
    firstName = await input('First name: ');
  }

  const lastName = await input('Last name (optional): ');

  const phoneCodeHash = await telegram.sendCode(phoneNumber);
  console.log('    Phone Code Hash: ' + phoneCodeHash);

  let res;

  while (!res) {
    const code = await input('Code: ');

    if (!code) continue;

    try {
      res = await telegram.signUp(phoneNumber, phoneCodeHash, code, firstName, lastName);
    } catch (e) {
      if (e.type !== 'PHONE_CODE_INVALID') throw e;
    }
  }

  console.log(res.user);
  console.log(telegram.getStorage());
}
